// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestSigmatech.Data;

namespace TestSigmatech.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211019124830_TwoDatabase")]
    partial class TwoDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("TestSigmatech.Models.CheckResult", b =>
                {
                    b.Property<int>("NIK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("check_dtm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("check_status")
                        .HasColumnType("text");

                    b.Property<int?>("t_dukcapil_check_resultNIK")
                        .HasColumnType("integer");

                    b.HasKey("NIK");

                    b.HasIndex("t_dukcapil_check_resultNIK");

                    b.ToTable("checkResult");
                });

            modelBuilder.Entity("TestSigmatech.Models.Status", b =>
                {
                    b.Property<int>("NIK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("birth_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("gender")
                        .HasColumnType("integer");

                    b.Property<int>("m_dukcapil_data_id")
                        .HasColumnType("integer");

                    b.Property<string>("maiden_name")
                        .HasColumnType("text");

                    b.Property<int>("marital_status")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<int>("religion_id")
                        .HasColumnType("integer");

                    b.HasKey("NIK");

                    b.ToTable("status");
                });

            modelBuilder.Entity("TestSigmatech.Models.CheckResult", b =>
                {
                    b.HasOne("TestSigmatech.Models.CheckResult", "t_dukcapil_check_result")
                        .WithMany()
                        .HasForeignKey("t_dukcapil_check_resultNIK");

                    b.Navigation("t_dukcapil_check_result");
                });
#pragma warning restore 612, 618
        }
    }
}
